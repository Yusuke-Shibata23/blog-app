{
    "rules": {
        "php": {
            "indent_style": "space",
            "indent_size": 4,
            "max_line_length": 120,
            "naming_conventions": {
                "classes": "PascalCase",
                "methods": "camelCase",
                "variables": "camelCase",
                "constants": "UPPER_SNAKE_CASE"
            }
        },
        "vue": {
            "indent_style": "space",
            "indent_size": 2,
            "max_line_length": 100,
            "naming_conventions": {
                "components": "PascalCase",
                "props": "camelCase",
                "methods": "camelCase",
                "variables": "camelCase"
            }
        },
        "javascript": {
            "indent_style": "space",
            "indent_size": 2,
            "max_line_length": 100,
            "naming_conventions": {
                "functions": "camelCase",
                "variables": "camelCase",
                "constants": "UPPER_SNAKE_CASE"
            }
        },
        "css": {
            "indent_style": "space",
            "indent_size": 2,
            "max_line_length": 80,
            "naming_conventions": {
                "classes": "kebab-case",
                "ids": "camelCase"
            }
        }
    },
    "file_organization": {
        "php": {
            "controllers": "app/Http/Controllers",
            "models": "app/Models",
            "middleware": "app/Http/Middleware",
            "requests": "app/Http/Requests",
            "resources": "app/Http/Resources"
        },
        "vue": {
            "components": "resources/js/components",
            "views": "resources/js/views",
            "store": "resources/js/store",
            "router": "resources/js/router"
        }
    },
    "documentation": {
        "require_comments": true,
        "comment_style": "PHPDoc",
        "require_method_docs": true,
        "require_class_docs": true,
        "comment_language": {
            "php": {
                "docblock": "英語",
                "inline": "日本語"
            },
            "vue": {
                "docblock": "英語",
                "inline": "日本語"
            },
            "javascript": {
                "docblock": "英語",
                "inline": "日本語"
            }
        },
        "documentation_update_rules": {
            "description": "ドキュメント更新のルール",
            "rules": [
                "新機能追加時は関連するドキュメントを更新する",
                "既存機能の変更時は関連するドキュメントを更新する",
                "APIの変更時はAPIドキュメントを更新する",
                "データベーススキーマの変更時はスキーマ図を更新する",
                "コンポーネントの変更時はコンポーネントドキュメントを更新する"
            ],
            "update_process": [
                "変更内容の確認",
                "関連ドキュメントの特定",
                "ドキュメントの更新",
                "レビューと承認",
                "バージョン管理へのコミット"
            ]
        }
    },
    "testing": {
        "require_tests": true,
        "test_location": "tests",
        "coverage_threshold": 80
    },
    "development_rules": {
        "existing_functionality": {
            "description": "既存機能の保護",
            "rules": [
                "既存の機能を壊すような広範な変更は避ける",
                "コア変数や重要なロジックは慎重に変更する",
                "変更前に影響範囲を十分に考慮する"
            ]
        },
        "modification_principles": {
            "description": "修正の原則",
            "rules": [
                "問題の本質に焦点を当てる",
                "必要最小限の修正に留める",
                "既存のコードパターンを尊重する"
            ]
        },
        "testing_and_verification": {
            "description": "テストと確認",
            "rules": [
                "変更後は既存機能が正常に動作することを確認",
                "エラーが発生した場合は、影響範囲を特定して修正",
                "ユーザー体験を損なわないよう注意する"
            ]
        }
    }
} 